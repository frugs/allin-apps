{"version":3,"sources":["allin_logo.png","terran_icon.png","protoss_icon.png","zerg_icon.png","random_icon.png","allin_cover.png","bronze_icon.png","silver_icon.png","gold_icon.png","platinum_icon.png","diamond_icon.png","master_icon.png","grandmaster_icon.png","allin_official.png","AppHeader.js","RaceIcon.js","ProfileHeader.js","ProfileCardRace.js","ProfileCardTimezone.js","TimeRangePicker.js","MultiTimeRangePicker.js","ProfileCardTimeRange.js","ProfileCardUpdateOrDiscard.js","ProfilePanel.js","MainContent.js","LoginContent.js","AppContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SignedInNavbarGroup","avatar","player","signOut","Group","align","Alignment","RIGHT","minimal","icon","IconNames","NOTIFICATIONS","className","fill","target","Classes","MINIMAL","src","width","height","alt","TEXT_LARGE","content","intent","Intent","PRIMARY","LOG_OUT","onClick","AppHeader","isSignedIn","allinRedStyle","color","LEFT","Heading","AllinLogo","style","raceIcons","TerranIcon","ProtossIcon","ZergIcon","RandomIcon","RaceIcon","props","race","leagueIcons","BronzeIcon","SilverIcon","GoldIcon","PlatinumIcon","DiamondIcon","MasterIcon","GrandmasterIcon","races","Continent","timezone","continent","split","extractContinent","MAP_MARKER","iconSize","TEXT_MUTED","Race","Races","practiceRaces","map","includes","key","League","league","leagueIcon","ProfileHeader","AllinCover","HEADING","RaceButtonContent","RaceToggleButton","active","ProfileCardRace","updateAppState","filter","e","ProfileCardTimezone","value","this","valueDisplayFormat","TimezoneDisplayFormat","COMPOSITE","buttonProps","popoverProps","position","PopoverPosition","TOP","modifiers","preventOverflow","placeholder","onChange","React","Component","TimeRangePicker","from","to","onFromChange","onToChange","time","defaultTime","AddButton","day","timeRanges","stateKey","small","SMALL_PLUS","newTimeRanges","RemoveButton","DANGER","SMALL_MINUS","slice","length","TimeRangePickers","Date","MultiTimeRangePicker","DayTimeRange","selectAllOnFocus","showArrowButtons","useAmPm","ProfileCardTimeRange","ProfileCardUpdateOrDiscard","submitProfile","resetState","large","text","ProfilePanel","MainContent","selectedTabId","id","title","panel","LoginContent","signIn","elevation","Elevation","FOUR","AllinOfficial","PlaceHolderContent","fetch","then","response","ok","Error","statusText","json","data","databaseState","isAppReady","practice","moment","tz","guess","timeRangesMonday","timeRangesTuesday","timeRangesWednesday","timeRangesThursday","timeRangesFriday","timeRangesSaturday","timeRangesSunday","err","console","log","message","AppContent","FocusStyleManager","onlyShowFocusOnTabs","App","state","setState","window","location","assign","href","reload","method","headers","body","JSON","stringify","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1f3fe8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/allin_logo.22ac2fdd.png\";","module.exports = __webpack_public_path__ + \"static/media/terran_icon.0a91dd89.png\";","module.exports = __webpack_public_path__ + \"static/media/protoss_icon.7a6832e7.png\";","module.exports = __webpack_public_path__ + \"static/media/zerg_icon.ecf1d83c.png\";","module.exports = __webpack_public_path__ + \"static/media/random_icon.0f76d118.png\";","module.exports = __webpack_public_path__ + \"static/media/allin_cover.88f72fce.png\";","module.exports = __webpack_public_path__ + \"static/media/bronze_icon.8731c59d.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_icon.8aada941.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_icon.c5e72b84.png\";","module.exports = __webpack_public_path__ + \"static/media/platinum_icon.edfb887b.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_icon.7b57604c.png\";","module.exports = __webpack_public_path__ + \"static/media/master_icon.a346bae0.png\";","module.exports = __webpack_public_path__ + \"static/media/grandmaster_icon.6e5ed5fb.png\";","module.exports = __webpack_public_path__ + \"static/media/allin_official.577b3b65.png\";","import React from 'react';\nimport {Alignment, Button, Classes, Intent, Navbar, Popover} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport './AppHeader.css';\nimport AllinLogo from './allin_logo.png';\n\nfunction SignedInNavbarGroup({avatar, player, signOut}) {\n    return (\n        <Navbar.Group align={Alignment.RIGHT}>\n            <Button minimal icon={IconNames.NOTIFICATIONS} className=\"mx-2 px-3 py-2\"/>\n            <Popover\n                fill\n                target={\n                    <Button className={Classes.MINIMAL}>\n                        <img\n                            src={avatar}\n                            width=\"35\"\n                            height=\"35\"\n                            className=\"mr-2 AppHeader-navbar-avatar\"\n                            alt=\"Avatar\"\n                        />\n                        <span\n                            className={`${Classes.TEXT_LARGE} AppHeader-navbar-username`}>{player}</span>\n                    </Button>\n                }\n                content={\n                    <div className=\"AppHeader-navbar-avatar-username-popover\">\n                        <Button\n                            intent={Intent.PRIMARY}\n                            fill\n                            icon={IconNames.LOG_OUT}\n                            onClick={signOut}\n                        >\n                            Sign out\n                        </Button>\n                    </div>\n                }\n            />\n        </Navbar.Group>\n    );\n}\n\nfunction AppHeader({isSignedIn, avatar, player, signOut}) {\n    const allinRedStyle = {color: \"#EC222E\"};\n\n    return (\n        <header>\n            <Navbar>\n                <Navbar.Group align={Alignment.LEFT} className=\"AppHeader-navbar-heading\">\n                    <Navbar.Heading>\n                        <img\n                            src={AllinLogo}\n                            width=\"35\"\n                            height=\"30\"\n                            className=\"mx-2\"\n                            alt=\"\"\n                        />\n                        <span style={allinRedStyle}>All</span>-<span style={allinRedStyle}>In</span>spiration Practice\n                    </Navbar.Heading>\n                </Navbar.Group>\n                {isSignedIn ? <SignedInNavbarGroup avatar={avatar} player={player} signOut={signOut}/> : \"\"}\n            </Navbar>\n        </header>\n    );\n}\n\nexport default AppHeader;\n","import React from 'react';\nimport TerranIcon from \"./terran_icon.png\";\nimport ProtossIcon from \"./protoss_icon.png\";\nimport ZergIcon from \"./zerg_icon.png\";\nimport RandomIcon from \"./random_icon.png\";\n\nconst raceIcons = {\n    \"Terran\": TerranIcon,\n    \"Protoss\": ProtossIcon,\n    \"Zerg\": ZergIcon,\n    \"Random\": RandomIcon,\n};\n\nfunction RaceIcon(props) {\n    const {race} = props;\n    return (\n        <img src={raceIcons[race]} alt={race} {...props}/>\n    );\n}\n\nexport default RaceIcon;","import React from 'react';\nimport {Classes, Icon} from \"@blueprintjs/core\";\nimport {IconNames} from \"@blueprintjs/icons\";\nimport RaceIcon from \"./RaceIcon\";\nimport './ProfileHeader.css';\nimport AllinCover from './allin_cover.png';\nimport BronzeIcon from './bronze_icon.png';\nimport SilverIcon from './silver_icon.png';\nimport GoldIcon from './gold_icon.png';\nimport PlatinumIcon from './platinum_icon.png';\nimport DiamondIcon from './diamond_icon.png';\nimport MasterIcon from './master_icon.png';\nimport GrandmasterIcon from './grandmaster_icon.png';\n\nconst leagueIcons = {\n    \"Bronze\": BronzeIcon,\n    \"Silver\": SilverIcon,\n    \"Gold\": GoldIcon,\n    \"Platinum\": PlatinumIcon,\n    \"Diamond\": DiamondIcon,\n    \"Master\": MasterIcon,\n    \"Grandmaster\": GrandmasterIcon,\n};\n\nconst races = [\n    \"Terran\",\n    \"Protoss\",\n    \"Zerg\",\n    \"Random\",\n];\n\nfunction extractContinent(timezone) {\n    if (!timezone) {\n        return \"\";\n    }\n\n    let split = timezone.split(\"/\");\n    if (!split) {\n        return \"\";\n    }\n\n    return split[0];\n}\n\nconst Continent = ({timezone}) => {\n    if (timezone) {\n        const continent = extractContinent(timezone);\n        return (\n            <div className=\"d-flex align-items-center my-1\">\n                <Icon icon={IconNames.MAP_MARKER} className=\"mx-2\" iconSize={20}/>\n                <span className={`${Classes.TEXT_MUTED} ${Classes.TEXT_LARGE} my-0`}>{continent}</span>\n            </div>\n        );\n    }\n\n    return null;\n};\n\nconst Race = ({race}) => (\n    <div className=\"d-flex align-items-center my-1\">\n        <RaceIcon\n            race={race}\n            alt=\"\"\n            width=\"20\"\n            height=\"20\"\n            className=\"mx-2 AppUtil-inline-icon\"\n        />\n        <span className={`${Classes.TEXT_MUTED} ${Classes.TEXT_LARGE} my-0`}>{race}</span>\n    </div>\n);\n\nconst Races = ({practiceRaces}) => (\n  <div className=\"d-flex\">\n      {races.map((race) => practiceRaces.includes(race) ? <Race race={race} key={race}/> : null)}\n  </div>\n);\n\nconst League = ({league}) => {\n    if (league) {\n        let leagueIcon = leagueIcons[league];\n\n        return (\n            <div className=\"d-flex align-items-center my-1\">\n                <img\n                    src={leagueIcon}\n                    alt=\"\"\n                    width=\"20\"\n                    height=\"20\"\n                    className=\"mx-2 AppUtil-inline-icon\"\n                />\n                <span className={`${Classes.TEXT_MUTED} ${Classes.TEXT_LARGE} my-0`}>{league} League</span>\n            </div>\n        );\n    }\n\n    return null;\n};\n\nfunction ProfileHeader({avatar, player, timezone, practiceRaces, league}) {\n    return (\n        <div>\n            <img\n                src={AllinCover}\n                alt=\"Cover\"\n                className=\"Profile-cover\"\n            />\n            <div align=\"left\" className=\"d-flex align-items-center Profile-avatar-username-summary-container\">\n                <img\n                    src={avatar}\n                    width=\"200\"\n                    height=\"200\"\n                    className=\"Profile-avatar mx-2\"\n                    alt=\"Avatar\"\n                />\n                <span className=\"mx-3 py-5\">\n                    <div className=\"d-flex flex-column align-items-start\">\n                        <h2 className={`${Classes.HEADING} my-3`}>{player}</h2>\n                        <League league={league}/>\n                        <Races practiceRaces={practiceRaces}/>\n                        <Continent timezone={timezone}/>\n                    </div>\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileHeader;\n","import React from 'react';\nimport {Button, ButtonGroup, Card, Classes, Intent} from '@blueprintjs/core';\nimport RaceIcon from \"./RaceIcon\";\nimport './ProfileCard.css';\nimport './AppUtil.css'\n\nfunction RaceButtonContent({race}) {\n    return (\n        <div className=\"d-flex align-items-center\">\n            <RaceIcon\n                race={race}\n                alt=\"\"\n                width=\"20\"\n                height=\"20\"\n                className=\"mx-2 AppUtil-inline-icon AppUtil-invert-active-icon\"\n            />\n            {race}\n        </div>\n    );\n}\n\nfunction RaceToggleButton({practiceRaces, race, onClick}) {\n    return (\n        <Button intent={Intent.PRIMARY} active={practiceRaces.includes(race)} onClick={onClick}>\n            <RaceButtonContent race={race}/>\n        </Button>\n    );\n}\n\nfunction ProfileCardRace(props) {\n    const races = [\n        \"Terran\",\n        \"Protoss\",\n        \"Zerg\",\n        \"Random\",\n    ];\n    const {practiceRaces, updateAppState} = props;\n\n    return (\n        <Card className=\"Profile-card\">\n            <div className=\"mb-4\">\n                <h4 className={Classes.HEADING}>The race(s) you'd like to practice with:</h4>\n            </div>\n            <ButtonGroup minimal fill>\n                {\n                    races.map((race) => {\n                        return (\n                            <RaceToggleButton\n                                key={race}\n                                practiceRaces={practiceRaces}\n                                race={race}\n                                onClick={() => {\n                                    if (practiceRaces.includes(race)) {\n                                        updateAppState({practiceRaces: practiceRaces.filter((e) => e !== race)});\n                                    } else {\n                                        updateAppState({practiceRaces: [...practiceRaces, race]});\n                                    }\n                                }}\n                            />\n                        )\n                    })\n                }\n            </ButtonGroup>\n        </Card>\n    );\n}\n\nexport default ProfileCardRace;\n","import React from 'react';\nimport {Card, Classes, PopoverPosition} from \"@blueprintjs/core\";\nimport {TimezoneDisplayFormat, TimezonePicker} from \"@blueprintjs/timezone\";\nimport './ProfileCard.css';\n\nclass ProfileCardTimezone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateAppState = props.updateAppState\n    }\n\n    render() {\n        return (\n            <Card className=\"Profile-card\">\n                <div className=\"mb-4\">\n                    <h4 className={Classes.HEADING}>\n                        The time zone that you live in:\n                    </h4>\n                </div>\n                <TimezonePicker\n                    value={this.props.timezone}\n                    valueDisplayFormat={TimezoneDisplayFormat.COMPOSITE}\n                    buttonProps={{className: \"px-5\"}}\n                    popoverProps={{\n                        position: PopoverPosition.TOP,\n                        modifiers: {preventOverflow: true},\n                    }}\n                    placeholder=\"Select time zone\"\n                    onChange={(timezone) => {\n                        this.updateAppState({timezone: timezone});\n                    }}\n                />\n            </Card>\n        );\n    }\n}\n\nexport default ProfileCardTimezone;\n","import React from 'react';\nimport {TimePicker} from \"@blueprintjs/datetime\";\n\nfunction TimeRangePicker(props) {\n    let {from, to, onFromChange, onToChange} = props;\n    return (\n        <div className=\"d-flex align-items-center\">\n            <span className=\"mx-3\">From:</span>\n            <TimePicker {...props} value={from} placeholder=\"From time\" onChange={(time) => onFromChange(time)}/>\n            <span className=\"mx-3\">To:</span>\n            <TimePicker {...props} value={to} placeholder=\"To time\" onChange={(time) => onToChange(time)}/>\n        </div>\n    );\n}\n\nexport default TimeRangePicker;","import React from 'react';\nimport {Button, Classes, Intent, Tooltip} from '@blueprintjs/core'\nimport {IconNames} from \"@blueprintjs/icons\";\nimport TimeRangePicker from \"./TimeRangePicker\";\n\nconst defaultTime = \"1899-12-31T00:00:00.000Z\";\n\nfunction AddButton({day, timeRanges, updateAppState}) {\n    const stateKey = `timeRanges${day}`;\n    return (\n        <Tooltip content=\"Add a time range\">\n            <Button\n                small\n                intent={Intent.PRIMARY}\n                minimal\n                className=\"ml-1 mr-2\"\n                icon={IconNames.SMALL_PLUS}\n                onClick={\n                    () => {\n                        let newTimeRanges = [...timeRanges, {from: defaultTime, to: defaultTime}];\n                        updateAppState({[stateKey]: newTimeRanges})\n                    }\n                }\n            />\n        </Tooltip>\n    );\n}\n\nfunction RemoveButton({day, timeRanges, updateAppState}) {\n    const stateKey = `timeRanges${day}`;\n    return (\n        <Tooltip content=\"Remove this time range\">\n            <Button\n                small\n                intent={Intent.DANGER}\n                minimal\n                className=\"ml-2 mr-1\"\n                icon={IconNames.SMALL_MINUS}\n                onClick={\n                    () => {\n                        let newTimeRanges = timeRanges.slice(0, timeRanges.length - 1);\n                        updateAppState({[stateKey]: newTimeRanges})\n                    }\n                }\n            />\n        </Tooltip>\n    );\n}\n\nfunction TimeRangePickers(props) {\n    let {timeRanges, day, updateAppState} = props;\n    const stateKey = `timeRanges${day}`;\n    if (timeRanges.length > 0) {\n        return (\n            <div className=\"mb-3\">\n                {\n                    timeRanges.map(({from, to}, key) => {\n                        return (\n                            <div key={key} className=\"d-flex\">\n                                <TimeRangePicker\n                                    {...props}\n                                    from={new Date(timeRanges[key].from)}\n                                    to={new Date(timeRanges[key].to)}\n                                    onFromChange={(time) => {\n                                        let newTimeRanges = [...timeRanges];\n                                        newTimeRanges[key].from = time;\n                                        updateAppState({[stateKey]: newTimeRanges});\n                                    }}\n                                    onToChange={(time) => {\n                                        let newTimeRanges = [...timeRanges];\n                                        newTimeRanges[key].to = time;\n                                        updateAppState({[stateKey]: newTimeRanges});\n                                    }}\n                                />\n                                {(() => {\n                                    if (key === timeRanges.length - 1) {\n                                        return (\n                                            <div className=\"d-flex align-items-center\">\n                                                <AddButton\n                                                    day={day}\n                                                    timeRanges={timeRanges}\n                                                    updateAppState={updateAppState}\n                                                />\n                                                <RemoveButton\n                                                    day={day}\n                                                    timeRanges={timeRanges}\n                                                    updateAppState={updateAppState}\n                                                />\n                                            </div>\n                                        );\n                                    }\n                                })()}\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    } else {\n        return (\n            <div className={`${Classes.TEXT_MUTED} mb-3 mx-3`}>\n                No availability on this day.\n                <AddButton\n                    day={day}\n                    timeRanges={timeRanges}\n                    updateAppState={updateAppState}\n                />\n            </div>\n        )\n    }\n}\n\nfunction MultiTimeRangePicker(props) {\n    return (\n        <TimeRangePickers {...props}/>\n    );\n}\n\nexport default MultiTimeRangePicker;","import React from 'react';\nimport {Card, Classes, Divider} from '@blueprintjs/core';\nimport MultiTimeRangePicker from \"./MultiTimeRangePicker\";\nimport './ProfileCard.css';\n\nfunction DayTimeRange(props) {\n    let {day} = props;\n    return (\n        <div>\n            <div>\n                <h5 className={`${Classes.HEADING}`}>{day}</h5>\n            </div>\n            <div className=\"d-flex align-items-center\">\n                <MultiTimeRangePicker\n                    {...props}\n                    timeRanges={props[`timeRanges${day}`]}\n                    selectAllOnFocus\n                    showArrowButtons\n                    useAmPm\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction ProfileCardTimeRange(props) {\n    const weekDayDays = [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n    ];\n    const weekEndDays = [\n        \"Saturday\",\n        \"Sunday\",\n    ];\n    return (\n        <Card className=\"Profile-card\">\n            <div className=\"mb-4\">\n                <h4 className={Classes.HEADING}>The times during the week you are typically available for practice:</h4>\n            </div>\n            {weekDayDays.map((day) => <DayTimeRange {...props} key={day} day={day}/>)}\n            <Divider className=\"mb-4\"/>\n            {weekEndDays.map((day) => <DayTimeRange {...props} key={day} day={day}/>)}\n        </Card>\n    );\n}\n\nexport default ProfileCardTimeRange;\n","import React from 'react';\nimport {Button, Intent} from '@blueprintjs/core';\nimport './ProfileCard.css';\n\nfunction ProfileCardUpdateOrDiscard({submitProfile, resetState}) {\n    return (\n        <div className=\"Profile-card\">\n            <div className=\"mt-1 mb-3\">\n                <Button\n                    large\n                    intent={Intent.PRIMARY}\n                    text=\"Update Profile\"\n                    className=\"mx-2 px-5\"\n                    onClick={submitProfile}\n                />\n                <Button\n                    large\n                    intent={Intent.DANGER}\n                    text=\"Discard Changes\"\n                    className=\"mx-2 px-5\"\n                    onClick={resetState}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileCardUpdateOrDiscard;\n","import React from 'react';\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileCardRace from \"./ProfileCardRace\";\nimport ProfileCardTimezone from \"./ProfileCardTimezone\";\nimport ProfileCardTimeRange from \"./ProfileCardTimeRange\";\nimport ProfileCardUpdateOrDiscard from \"./ProfileCardUpdateOrDiscard\";\nimport './ProfilePanel.css';\n\nfunction ProfilePanel(props) {\n    return (\n        <div>\n            <ProfileHeader {...props}/>\n            <div className=\"Profile-body\">\n                <ProfileCardRace {...props}/>\n                <ProfileCardTimezone {...props}/>\n                <ProfileCardTimeRange {...props}/>\n                <ProfileCardUpdateOrDiscard {...props}/>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfilePanel;\n","import React from 'react';\nimport {Icon, Tab, Tabs} from \"@blueprintjs/core\";\nimport ProfilePanel from \"./ProfilePanel\";\n\nfunction MainContent(props) {\n    return (\n        <Tabs large selectedTabId=\"profile\">\n            <span className=\"ml-2\"/>\n            <Tab\n                id=\"profile\"\n                icon=\"person\"\n                title={\n                    <><Icon icon=\"person\" className=\"ml-2 mr-1\"/><span className=\"ml-1 mr-2\">Profile</span></>\n                }\n                panel={<ProfilePanel {...props}/>}\n            />\n            <Tab\n                id=\"search\"\n                icon=\"search\"\n                title={\n                    <><Icon icon=\"search\" className=\"ml-2 mr-1\"/><span className=\"ml-1 mr-2\">Search</span></>\n                }\n            />\n            <Tab\n                id=\"explore\"\n                icon=\"explore\"\n                title={\n                    <><Icon icon=\"globe-network\" className=\"ml-2 mr-1\"/><span className=\"ml-1 mr-2\">Explore</span></>\n                }\n            />\n        </Tabs>\n    );\n}\n\nexport default MainContent;","import React from 'react';\nimport {Button, Card, Classes, Elevation} from '@blueprintjs/core';\nimport './LoginContent.scss';\nimport './AppUtil.css';\nimport AllinOfficial from './allin_official.png';\n\nfunction LoginContent({signIn}) {\n    return (\n        <Card className=\"mx-auto my-5 LoginContent-card\" elevation={Elevation.FOUR}>\n            <div className=\"row h-100\">\n                <div className=\"align-self-center text-center p-5 w-100\">\n                    <img\n                        src={AllinOfficial}\n                        alt=\"All-Inspiration\"\n                        width=\"300\"\n                        className=\"mb-5\"\n                        style={{\"objectFit\": \"contain\"}}\n                    />\n                    <div><h2 className={Classes.HEADING}>Welcome to All-Inspiraction Practice!</h2></div>\n                    <Button\n                        large\n                        className=\"my-3 LoginContent-discord-login-button\"\n                        onClick={signIn}\n                    >\n                        <img\n                            src=\"https://discordapp.com/assets/2c21aeda16de354ba5334551a883b481.png\"\n                            className=\"AppUtil-inline-icon mr-2\"\n                            height=\"40\"\n                            width=\"40\"\n                            alt=\"Discord\"\n                        />\n                        Sign in using Discord\n                    </Button>\n                </div>\n            </div>\n        </Card>\n\n    );\n}\n\nexport default LoginContent;","import React from 'react';\nimport MainContent from \"./MainContent\";\nimport LoginContent from \"./LoginContent\";\nimport moment from \"moment-timezone\";\n\nclass PlaceHolderContent extends React.Component {\n    componentDidMount() {\n        const {updateAppState} = this.props;\n        fetch(\"/practice_backend/member\")\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                const databaseState = {\n                    isSignedIn: true,\n                    isAppReady: true,\n                    avatar: data.avatar,\n                    player: data.player,\n                    league: data.league,\n                    timezone: data.practice.timezone || moment.tz.guess(),\n                    practiceRaces: data.practice.practiceRaces,\n                    timeRangesMonday: data.practice.timeRangesMonday || [],\n                    timeRangesTuesday: data.practice.timeRangesTuesday || [],\n                    timeRangesWednesday: data.practice.timeRangesWednesday || [],\n                    timeRangesThursday: data.practice.timeRangesThursday || [],\n                    timeRangesFriday: data.practice.timeRangesFriday || [],\n                    timeRangesSaturday: data.practice.timeRangesSaturday || [],\n                    timeRangesSunday: data.practice.timeRangesSunday || [],\n                };\n                updateAppState({...databaseState, databaseState: databaseState});\n            }, (err) => {\n                updateAppState({isAppReady: true});\n                console.log(err.message);\n            });\n    }\n\n    render() {\n        return \"\";\n    }\n}\n\nfunction AppContent(props) {\n    const {isAppReady, isSignedIn, updateAppState} = props;\n    if (isAppReady) {\n        return isSignedIn ? <MainContent {...props}/> : <LoginContent {...props}/>;\n    } else {\n        console.log(isAppReady);\n        return <PlaceHolderContent updateAppState={updateAppState}/>\n    }\n}\n\nexport default AppContent;","import React from 'react';\nimport {FocusStyleManager} from \"@blueprintjs/core\";\nimport AppHeader from \"./AppHeader\";\nimport AppContent from \"./AppContent\";\nimport './App.scss';\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfunction makeInitialState() {\n    return {\n        isSignedIn: false,\n        isAppReady: false,\n        avatar: \"\",\n        player: \"\",\n        continent: \"\",\n        race: \"\",\n        league: \"\",\n        practiceRaces: [],\n        timezone: \"\",\n        timeRangesMonday: [],\n        timeRangesTuesday: [],\n        timeRangesWednesday: [],\n        timeRangesThursday: [],\n        timeRangesFriday: [],\n        timeRangesSaturday: [],\n        timeRangesSunday: [],\n        databaseState: {},\n    };\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...makeInitialState(),\n            updateAppState: (state) => {\n                this.setState(state);\n            },\n\n            signIn: () => {\n                window.location.assign(\"/sso/discord-login?redirect_url=\" + window.location.href)\n            },\n\n            signOut: () => {\n                fetch(\"/sso/discord-signout\").then(() => {\n                    window.location.reload();\n                }, () => {\n                    window.location.reload();\n                });\n            },\n\n            resetState: () => {\n                const {databaseState} = this.state;\n                if (databaseState) {\n                    this.setState(databaseState);\n                } else {\n                    this.setState(makeInitialState());\n                }\n            },\n\n            submitProfile: () => {\n                const {\n                    practiceRaces,\n                    timezone,\n                    timeRangesMonday,\n                    timeRangesTuesday,\n                    timeRangesWednesday,\n                    timeRangesThursday,\n                    timeRangesFriday,\n                    timeRangesSaturday,\n                    timeRangesSunday,\n                } = this.state;\n\n                fetch('/practice_backend/member-practice', {\n                    method: 'post',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        practiceRaces: practiceRaces,\n                        timezone: timezone,\n                        timeRangesMonday: timeRangesMonday,\n                        timeRangesTuesday: timeRangesTuesday,\n                        timeRangesWednesday: timeRangesWednesday,\n                        timeRangesThursday: timeRangesThursday,\n                        timeRangesFriday: timeRangesFriday,\n                        timeRangesSaturday: timeRangesSaturday,\n                        timeRangesSunday: timeRangesSunday,\n                    })\n                }).then(() => {\n                    window.location.reload();\n                });\n            },\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <AppHeader {...this.state}/>\n                <AppContent {...this.state}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}