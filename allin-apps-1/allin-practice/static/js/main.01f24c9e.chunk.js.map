{"version":3,"sources":["allin_logo.png","terran_icon.png","protoss_icon.png","zerg_icon.png","random_icon.png","allin_cover.png","bronze_icon.png","silver_icon.png","gold_icon.png","platinum_icon.png","diamond_icon.png","master_icon.png","grandmaster_icon.png","AppHeader.js","RaceIcon.js","ProfileHeader.js","ToggleButton.js","ProfileCardRace.js","ProfileCardTimezone.js","TimeRangePicker.js","MultiTimeRangePicker.js","ProfileCardTimeRange.js","ProfileCardUpdateOrDiscard.js","ProfilePanel.js","AppContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppHeader","avatar","player","allinRedStyle","color","Group","align","Alignment","LEFT","className","Heading","src","AllinLogo","width","height","alt","style","RIGHT","minimal","icon","IconNames","NOTIFICATIONS","Classes","MINIMAL","TEXT_LARGE","raceIcons","TerranIcon","ProtossIcon","ZergIcon","RandomIcon","RaceIcon","props","race","leagueIcons","BronzeIcon","SilverIcon","GoldIcon","PlatinumIcon","DiamondIcon","MasterIcon","GrandmasterIcon","ProfileHeader","continent","league","leagueIcon","AllinCover","HEADING","MAP_MARKER","iconSize","TEXT_MUTED","ToggleButton","state","pressed","this","setState","event","onClick","active","buttonProps","togglePressed","forwardClick","children","React","Component","RaceButtonContent","RaceToggleButton","practiceRaces","intent","Intent","PRIMARY","includes","ProfileCardRace","updateAppState","fill","map","key","filter","e","extractContinent","timezone","split","ProfileCardTimezone","value","valueDisplayFormat","TimezoneDisplayFormat","COMPOSITE","popoverProps","position","PopoverPosition","TOP","modifiers","preventOverflow","placeholder","onChange","TimeRangePicker","from","to","onFromChange","onToChange","time","AddButton","content","small","SMALL_PLUS","RemoveButton","DANGER","SMALL_MINUS","TimeRangePickers","timeRanges","day","stateKey","length","newTimeRanges","slice","MultiTimeRangePicker","DayTimeRange","selectAllOnFocus","showArrowButtons","useAmPm","ProfileCardTimeRange","ProfileCardUpdateOrDiscard","large","text","ProfilePanel","AppContent","selectedTabId","id","title","panel","FocusStyleManager","onlyShowFocusOnTabs","App","timeRangesMonday","timeRangesTuesday","timeRangesWednesday","timeRangesThursday","timeRangesFriday","timeRangesSaturday","timeRangesSunday","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01f24c9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/allin_logo.22ac2fdd.png\";","module.exports = __webpack_public_path__ + \"static/media/terran_icon.0a91dd89.png\";","module.exports = __webpack_public_path__ + \"static/media/protoss_icon.7a6832e7.png\";","module.exports = __webpack_public_path__ + \"static/media/zerg_icon.ecf1d83c.png\";","module.exports = __webpack_public_path__ + \"static/media/random_icon.0f76d118.png\";","module.exports = __webpack_public_path__ + \"static/media/allin_cover.88f72fce.png\";","module.exports = __webpack_public_path__ + \"static/media/bronze_icon.8731c59d.png\";","module.exports = __webpack_public_path__ + \"static/media/silver_icon.8aada941.png\";","module.exports = __webpack_public_path__ + \"static/media/gold_icon.c5e72b84.png\";","module.exports = __webpack_public_path__ + \"static/media/platinum_icon.edfb887b.png\";","module.exports = __webpack_public_path__ + \"static/media/diamond_icon.7b57604c.png\";","module.exports = __webpack_public_path__ + \"static/media/master_icon.a346bae0.png\";","module.exports = __webpack_public_path__ + \"static/media/grandmaster_icon.6e5ed5fb.png\";","import React from 'react';\nimport {Alignment, Button, Classes, Navbar} from '@blueprintjs/core';\nimport {IconNames} from '@blueprintjs/icons';\nimport './AppHeader.css';\nimport AllinLogo from './allin_logo.png';\n\nfunction AppHeader({avatar, player}) {\n    const allinRedStyle = {color: \"#EC222E\"};\n\n    return (\n        <header>\n            <Navbar>\n                <Navbar.Group align={Alignment.LEFT} className=\"AppHeader-navbar-heading\">\n                    <Navbar.Heading>\n                        <img\n                            src={AllinLogo}\n                            width=\"35\"\n                            height=\"30\"\n                            className=\"mx-2\"\n                            alt=\"\"\n                        />\n                        <span style={allinRedStyle}>All</span>-<span style={allinRedStyle}>In</span>spiration Practice\n                    </Navbar.Heading>\n                </Navbar.Group>\n                <Navbar.Group align={Alignment.RIGHT}>\n                    <Button minimal icon={IconNames.NOTIFICATIONS} className=\"mx-2 px-3 py-2\"/>\n                    <Button className={Classes.MINIMAL}>\n                        <img\n                            src={avatar}\n                            width=\"35\"\n                            height=\"35\"\n                            className=\"mr-2 AppHeader-navbar-avatar\"\n                            alt=\"Avatar\"\n                        />\n                        <span\n                            className={`${Classes.TEXT_LARGE} AppHeader-navbar-username`}>{player}</span>\n                    </Button>\n                </Navbar.Group>\n            </Navbar>\n        </header>\n    );\n}\n\nexport default AppHeader;\n","import React from 'react';\nimport TerranIcon from \"./terran_icon.png\";\nimport ProtossIcon from \"./protoss_icon.png\";\nimport ZergIcon from \"./zerg_icon.png\";\nimport RandomIcon from \"./random_icon.png\";\n\nconst raceIcons = {\n    \"Terran\": TerranIcon,\n    \"Protoss\": ProtossIcon,\n    \"Zerg\": ZergIcon,\n    \"Random\": RandomIcon,\n};\n\nfunction RaceIcon(props) {\n    const {race} = props;\n    return (\n        <img src={raceIcons[race]} alt={race} {...props}/>\n    );\n}\n\nexport default RaceIcon;","import React from 'react';\nimport { Classes, Icon } from \"@blueprintjs/core\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport RaceIcon from \"./RaceIcon\";\nimport './ProfileHeader.css';\nimport AllinCover from './allin_cover.png';\nimport BronzeIcon from './bronze_icon.png';\nimport SilverIcon from './silver_icon.png';\nimport GoldIcon from './gold_icon.png';\nimport PlatinumIcon from './platinum_icon.png';\nimport DiamondIcon from './diamond_icon.png';\nimport MasterIcon from './master_icon.png';\nimport GrandmasterIcon from './grandmaster_icon.png';\n\nconst leagueIcons = {\n    \"Bronze\": BronzeIcon,\n    \"Silver\": SilverIcon,\n    \"Gold\": GoldIcon,\n    \"Platinum\": PlatinumIcon,\n    \"Diamond\": DiamondIcon,\n    \"Master\": MasterIcon,\n    \"Grandmaster\": GrandmasterIcon,\n};\n\nfunction ProfileHeader({avatar, player, continent, race, league}) {\n    let leagueIcon = leagueIcons[league];\n\n    return (\n        <div>\n            <img\n                src={AllinCover}\n                alt=\"Cover\"\n                className=\"Profile-cover\"\n            />\n            <div align=\"left\" className=\"d-flex align-items-center Profile-avatar-username-summary-container\">\n                <img\n                    src={avatar}\n                    width=\"200\"\n                    height=\"200\"\n                    className=\"Profile-avatar mx-2\"\n                    alt=\"Avatar\"\n                />\n                <span className=\"mx-3 py-5\">\n                    <div className=\"d-flex flex-column align-items-start\">\n                        <h2 className={`${Classes.HEADING} my-3`}>{player}</h2>\n                        <div className=\"d-flex align-items-center my-1\">\n                            <Icon icon={IconNames.MAP_MARKER} className=\"mx-2\" iconSize={20}/>\n                            <span className={`${Classes.TEXT_MUTED} ${Classes.TEXT_LARGE} my-0`}>{continent}</span>\n                        </div>\n                        <div className=\"d-flex align-items-center my-1\">\n                            <RaceIcon\n                                race={race}\n                                alt=\"\"\n                                width=\"20\"\n                                height=\"20\"\n                                className=\"mx-2 AppUtil-inline-icon\"\n                            />\n                            <span className={`${Classes.TEXT_MUTED} ${Classes.TEXT_LARGE} my-0`}>Zerg</span>\n                        </div>\n                        <div className=\"d-flex align-items-center my-1\">\n                            <img\n                                src={leagueIcon}\n                                alt=\"\"\n                                width=\"20\"\n                                height=\"20\"\n                                className=\"mx-2 AppUtil-inline-icon\"\n                            />\n                            <span className={`${Classes.TEXT_MUTED} ${Classes.TEXT_LARGE} my-0`}>{league} League</span>\n                        </div>\n                    </div>\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileHeader;\n","import React from 'react';\nimport {Button} from '@blueprintjs/core';\n\nclass ToggleButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pressed: props.pressed\n        }\n    }\n\n    togglePressed() {\n        this.setState({pressed: !this.state.pressed});\n    }\n\n    forwardClick(event) {\n        if (this.props.onClick) {\n            this.props.onClick(event)\n        }\n    }\n\n    render() {\n        return (\n            <Button active={this.state.pressed} {...this.props.buttonProps} onClick={(event) => {\n                this.togglePressed();\n                this.forwardClick(event);\n            }}>\n                {this.props.children}\n            </Button>\n        );\n    }\n}\n\nexport default ToggleButton;","import React from 'react';\nimport {ButtonGroup, Card, Classes, Intent} from '@blueprintjs/core';\nimport ToggleButton from \"./ToggleButton\";\nimport RaceIcon from \"./RaceIcon\";\nimport './ProfileCard.css';\nimport './AppUtil.css'\n\nfunction RaceButtonContent({race}) {\n    return (\n        <div className=\"d-flex align-items-center\">\n            <RaceIcon\n                race={race}\n                alt=\"\"\n                width=\"20\"\n                height=\"20\"\n                className=\"mx-2 AppUtil-inline-icon AppUtil-invert-active-icon\"\n            />\n            {race}\n        </div>\n    );\n}\n\nfunction RaceToggleButton(props) {\n    const {practiceRaces, race} = props;\n    return (\n        <ToggleButton buttonProps={{intent: Intent.PRIMARY}} pressed={practiceRaces.includes(race)}>\n            <RaceButtonContent race={race}/>\n        </ToggleButton>\n    );\n}\n\nfunction ProfileCardRace(props) {\n    const races = [\n        \"Terran\",\n        \"Protoss\",\n        \"Zerg\",\n        \"Random\",\n    ];\n    const {practiceRaces, updateAppState} = props;\n\n    return (\n        <Card className=\"Profile-card\">\n            <div className=\"mb-4\">\n                <h4 className={Classes.HEADING}>The race(s) you'd like to practice with:</h4>\n            </div>\n            <ButtonGroup minimal fill>\n                {\n                    races.map((race) => {\n                        return (\n                            <RaceToggleButton\n                                key={race}\n                                {...props}\n                                race={race}\n                                onClick={() => {\n                                    if (practiceRaces.includes(race)) {\n                                        updateAppState({practiceRaces: practiceRaces.filter((e) => e !== race)});\n                                    } else {\n                                        updateAppState({practiceRaces: [...practiceRaces, race]});\n                                    }\n                                }}\n                            />\n                        )\n                    })\n                }\n            </ButtonGroup>\n        </Card>\n    );\n}\n\nexport default ProfileCardRace;\n","import React from 'react';\nimport {Card, Classes, PopoverPosition} from \"@blueprintjs/core\";\nimport {TimezoneDisplayFormat, TimezonePicker} from \"@blueprintjs/timezone\";\nimport './ProfileCard.css';\n\nfunction extractContinent(timezone) {\n    if (!timezone) {\n        return \"\";\n    }\n\n    let split = timezone.split(\"/\");\n    if (!split) {\n        return \"\";\n    }\n\n    return split[0];\n}\n\nclass ProfileCardTimezone extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateAppState = props.updateAppState\n    }\n\n    render() {\n        return (\n            <Card className=\"Profile-card\">\n                <div className=\"mb-4\">\n                    <h4 className={Classes.HEADING}>\n                        The time zone that you live in:\n                    </h4>\n                </div>\n                <TimezonePicker\n                    value={this.props.timezone}\n                    valueDisplayFormat={TimezoneDisplayFormat.COMPOSITE}\n                    buttonProps={{className: \"px-5\"}}\n                    popoverProps={{\n                        position: PopoverPosition.TOP,\n                        modifiers: {preventOverflow: true},\n                    }}\n                    placeholder=\"Select time zone\"\n                    onChange={(timezone) => {\n                        this.updateAppState({timezone: timezone, continent: extractContinent(timezone)});\n                    }}\n                />\n            </Card>\n        );\n    }\n}\n\nexport default ProfileCardTimezone;\n","import React from 'react';\nimport {TimePicker} from \"@blueprintjs/datetime\";\n\nfunction TimeRangePicker(props) {\n    let {from, to, onFromChange, onToChange} = props;\n    return (\n        <div className=\"d-flex align-items-center\">\n            <span className=\"mx-3\">From:</span>\n            <TimePicker {...props} value={from} placeholder=\"From time\" onChange={(time) => onFromChange(time)}/>\n            <span className=\"mx-3\">To:</span>\n            <TimePicker {...props} value={to} placeholder=\"To time\" onChange={(time) => onToChange(time)}/>\n        </div>\n    );\n}\n\nexport default TimeRangePicker;","import React from 'react';\nimport {Button, Classes, Intent, Tooltip} from '@blueprintjs/core'\nimport {IconNames} from \"@blueprintjs/icons\";\nimport TimeRangePicker from \"./TimeRangePicker\";\n\nfunction AddButton(props) {\n    return (\n        <Tooltip content=\"Add a time range\">\n            <Button\n                {...props}\n                small\n                intent={Intent.PRIMARY}\n                minimal\n                className=\"ml-1 mr-2\"\n                icon={IconNames.SMALL_PLUS}\n            />\n        </Tooltip>\n    );\n}\n\nfunction RemoveButton(props) {\n    return (\n        <Tooltip content=\"Remove this time range\">\n            <Button\n                {...props}\n                small\n                intent={Intent.DANGER}\n                minimal\n                className=\"ml-2 mr-1\"\n                icon={IconNames.SMALL_MINUS}\n            />\n        </Tooltip>\n    );\n}\n\nfunction TimeRangePickers(props) {\n    let {timeRanges, day, updateAppState} = props;\n    const stateKey = `timeRanges${day}`;\n    if (timeRanges.length > 0) {\n        return (\n            <div className=\"mb-3\">\n                {\n                    timeRanges.map(({from, to}, key) => {\n                        return (\n                            <div key={key} className=\"d-flex\">\n                                <TimeRangePicker\n                                    {...props}\n                                    from={timeRanges[key].from}\n                                    to={timeRanges[key].to}\n                                    onFromChange={(time) => {\n                                        let newTimeRanges = [...timeRanges];\n                                        newTimeRanges[key].from = time;\n                                        updateAppState({[stateKey]: newTimeRanges});\n                                    }}\n                                    onToChange={(time) => {\n                                        let newTimeRanges = [...timeRanges];\n                                        newTimeRanges[key].to = time;\n                                        updateAppState({[stateKey]: newTimeRanges});\n                                    }}\n                                />\n                                {(() => {\n                                    if (key === timeRanges.length - 1) {\n                                        return (\n                                            <div className=\"d-flex align-items-center\">\n                                                <AddButton\n                                                    onClick={\n                                                        () => {\n                                                            let newTimeRanges = [...timeRanges, {}];\n                                                            updateAppState({[stateKey]: newTimeRanges})\n                                                        }\n                                                    }\n                                                />\n                                                <RemoveButton\n                                                    onClick={\n                                                        () => {\n                                                            let newTimeRanges = timeRanges.slice(0, timeRanges.length - 1);\n                                                            updateAppState({[stateKey]: newTimeRanges})\n                                                        }\n                                                    }\n                                                />\n                                            </div>\n                                        );\n                                    }\n                                })()}\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        );\n    } else {\n        return (\n            <div className={`${Classes.TEXT_MUTED} mb-3 mx-3`}>\n                No availability on this day.\n                <AddButton onClick={() => {\n                    let newTimeRanges = [...timeRanges, {}];\n                    updateAppState({[stateKey]: newTimeRanges})\n                }}/>\n            </div>\n        )\n    }\n}\n\nfunction MultiTimeRangePicker(props) {\n    return (\n        <TimeRangePickers {...props}/>\n    );\n}\n\nexport default MultiTimeRangePicker;","import React from 'react';\nimport {Card, Classes} from '@blueprintjs/core';\nimport MultiTimeRangePicker from \"./MultiTimeRangePicker\";\nimport './ProfileCard.css';\nimport './ProfileCardTimeRange.scss';\n\nfunction DayTimeRange(props) {\n    let {day} = props;\n    return (\n        <div>\n            <div>\n                <h5 className={`${Classes.HEADING}`}>{day}</h5>\n            </div>\n            <div className=\"d-flex align-items-center\">\n                <MultiTimeRangePicker\n                    {...props}\n                    timeRanges={props[`timeRanges${day}`]}\n                    selectAllOnFocus\n                    showArrowButtons\n                    useAmPm\n                />\n            </div>\n        </div>\n    );\n}\n\nfunction ProfileCardTimeRange(props) {\n    const weekDayDays = [\n        \"Monday\",\n        \"Tuesday\",\n        \"Wednesday\",\n        \"Thursday\",\n        \"Friday\",\n    ];\n    const weekEndDays = [\n        \"Saturday\",\n        \"Sunday\",\n    ];\n    return (\n        <Card className=\"Profile-card\">\n            <div className=\"mb-4\">\n                <h4 className={Classes.HEADING}>The times during the week you are available for practice:</h4>\n            </div>\n            <Card className=\"ProfileCardTimeRange-weekday-card\">\n                {weekDayDays.map((day) => <DayTimeRange {...props} key={day} day={day}/>)}\n            </Card>\n            <Card className=\"ProfileCardTimeRange-weekend-card\">\n                {weekEndDays.map((day) => <DayTimeRange {...props} key={day} day={day}/>)}\n            </Card>\n        </Card>\n    );\n}\n\nexport default ProfileCardTimeRange;\n","import React from 'react';\nimport {Button, Intent} from '@blueprintjs/core';\nimport './ProfileCard.css';\n\nfunction ProfileCardUpdateOrDiscard() {\n    return (\n        <div className=\"Profile-card\">\n            <Button large intent={Intent.PRIMARY} text=\"Update Profile\" className=\"mx-2 px-5 my-3\"/>\n            <Button large intent={Intent.DANGER} text=\"Discard Changes\" className=\"mx-2 px-5 my-3\"/>\n        </div>\n    );\n}\n\nexport default ProfileCardUpdateOrDiscard;\n","import React from 'react';\nimport ProfileHeader from \"./ProfileHeader\";\nimport ProfileCardRace from \"./ProfileCardRace\";\nimport ProfileCardTimezone from \"./ProfileCardTimezone\";\nimport ProfileCardTimeRange from \"./ProfileCardTimeRange\";\nimport ProfileCardUpdateOrDiscard from \"./ProfileCardUpdateOrDiscard\";\nimport './ProfilePanel.css';\n\nfunction ProfilePanel(props) {\n    return (\n        <div>\n            <ProfileHeader {...props}/>\n            <div className=\"Profile-body\">\n                <ProfileCardRace {...props}/>\n                <ProfileCardTimezone {...props}/>\n                <ProfileCardTimeRange {...props}/>\n                <ProfileCardUpdateOrDiscard/>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfilePanel;\n","import React from 'react';\nimport {Icon, Tab, Tabs} from \"@blueprintjs/core\";\nimport ProfilePanel from \"./ProfilePanel\";\n\nfunction AppContent(props) {\n    return (\n        <Tabs large selectedTabId=\"profile\">\n            <span className=\"ml-2\"/>\n            <Tab\n                id=\"profile\"\n                icon=\"person\"\n                title={\n                    <><Icon icon=\"person\" className=\"ml-2 mr-1\"/><span className=\"ml-1 mr-2\">Profile</span></>\n                }\n                panel={<ProfilePanel {...props}/>}\n            />\n            <Tab\n                id=\"search\"\n                icon=\"search\"\n                title={\n                    <><Icon icon=\"search\" className=\"ml-2 mr-1\"/><span className=\"ml-1 mr-2\">Search</span></>\n                }\n            />\n            <Tab\n                id=\"explore\"\n                icon=\"explore\"\n                title={\n                    <><Icon icon=\"globe-network\" className=\"ml-2 mr-1\"/><span className=\"ml-1 mr-2\">Explore</span></>\n                }\n            />\n        </Tabs>\n    );\n}\n\nexport default AppContent;","import React from 'react';\nimport { FocusStyleManager } from \"@blueprintjs/core\";\nimport './App.scss';\nimport AppHeader from \"./AppHeader\";\nimport AppContent from \"./AppContent\";\n\nFocusStyleManager.onlyShowFocusOnTabs();\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avatar: \"https://cdn.discordapp.com/avatars/114041046828056579/a78d511a528f641e4a131b37d3dc33b2\",\n            player: \"Hugo \\\"frugs\\\" Wainwright\",\n            continent: \"Europe\",\n            race: \"Zerg\",\n            league: \"Master\",\n            practiceRaces: [\"Protoss\", \"Zerg\"],\n            timezone: \"Europe/London\",\n            timeRangesMonday: [{}],\n            timeRangesTuesday: [{}],\n            timeRangesWednesday: [{}],\n            timeRangesThursday: [{}],\n            timeRangesFriday: [{}],\n            timeRangesSaturday: [{}],\n            timeRangesSunday: [{}],\n            updateAppState: (state) => {\n                this.setState(state)\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <AppHeader {...this.state}/>\n                <AppContent {...this.state}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}